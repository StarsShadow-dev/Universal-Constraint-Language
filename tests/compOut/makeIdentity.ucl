// compOut
// line:23 -> fn(x: String) -> String {
// 	x
// }
// line:24 -> "Hello, World!"
// line:25 -> fn(x: Number) -> Number {
// 	x
// }
// line:26 -> 81
// line:27 -> fn(x: Function) -> Function {
// 	x
// }
// line:28 -> fn() -> String {
// 	"testing"
// }

makeIdentity = fn(T: Type) -> Function {
	fn(x: T) -> T {
		x
	}
}

makeIdentity(String)
makeIdentity(String)("Hello, World!")
makeIdentity(Number)
makeIdentity(Number)(81)
makeIdentity(Function)
makeIdentity(Function)(fn() -> String {
	"testing"
})