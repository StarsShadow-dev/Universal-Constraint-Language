// cd ~lib.std.math
// Vec2 = struct(x: Numner, y: Number)
// Vec2.new = ...

// Vec2.new = @x(getNumber 1) @y(Number)
// 	&Vec2{
// 		x = x
// 		y = y
// 	}

// Vec2.add = @v1(Vec2) @v2(Vec2)
// 	&Vec2{
// 		x = v1.x + v2.x
// 		y = v1.y + v2.y
// 	}

// // ----------

// cd ~myCode
// add = ~lib.std.math.Vec2.add

// test = @v1(Vec2) @v2(Vec2) @v3(Vec2)
// 	add (add v1 v2) v3

// -----

// fib = @n(Number)
// 	if n <= 1 then
// 		n
// 	else
// 		(fib n - 1) + (fib n - 2)

// fib 1

// log = @string(String)
// 	rawEval "console.log(%%1%%)" [string]

// test = log "testing js codegen"

// a = 1
// a:b = 2
// a:b:c = 3
// >cd ~a
// a
// b
// b:c

__builtin:Bool